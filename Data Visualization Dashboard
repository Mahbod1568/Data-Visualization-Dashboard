import tkinter as tk
from tkinter import ttk
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import numpy as np

# Function to generate data and update plot
def update_plot():
    plot_type = plot_type_var.get()

    # Sample data
    x = np.arange(1, 11)
    y = np.random.randint(1, 20, 10)

    # Clear current figure
    fig.clear()
    ax = fig.add_subplot(111)

    # Generate selected plot type
    if plot_type == "Line Plot":
        ax.plot(x, y, marker="o", color="b", linestyle="-")
        ax.set_title("Line Plot")
    elif plot_type == "Bar Chart":
        ax.bar(x, y, color="g")
        ax.set_title("Bar Chart")
    elif plot_type == "Pie Chart":
        ax.pie(y, labels=x, autopct='%1.1f%%')
        ax.set_title("Pie Chart")

    # Refresh canvas
    canvas.draw()

# GUI setup
root = tk.Tk()
root.title("Data Visualization Dashboard")
root.geometry("600x500")

# Dropdown to select plot type
plot_type_var = tk.StringVar(value="Line Plot")
plot_options = ["Line Plot", "Bar Chart", "Pie Chart"]
plot_dropdown = ttk.Combobox(root, textvariable=plot_type_var, values=plot_options, state="readonly")
plot_dropdown.pack(pady=20)

# Button to update plot
update_button = tk.Button(root, text="Update Plot", command=update_plot, font=("Arial", 12), bg="blue", fg="white")
update_button.pack(pady=10)

# Matplotlib Figure and Canvas
fig = Figure(figsize=(5, 4), dpi=100)
canvas = FigureCanvasTkAgg(fig, master=root)
canvas.get_tk_widget().pack()

# Initialize with default plot
update_plot()

root.mainloop()
